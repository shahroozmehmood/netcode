// <auto-generated />
using System;
using GMS.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GMS.Migrations
{
    [DbContext(typeof(GMSDbContext))]
    [Migration("20220715102823_AddDataBaseAndTables")]
    partial class AddDataBaseAndTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GMS.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("discount");

                    b.Property<int?>("DiscountType")
                        .HasColumnType("int")
                        .HasColumnName("discount_type");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.Property<DateTime?>("ModifyAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modify_at");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int")
                        .HasColumnName("modify_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<decimal?>("PercentageValue")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("precentage_value");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<string>("StockCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("stock_category");

                    b.Property<string>("StockSubCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("stock_sub_category");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<decimal>("UnitPurchasePrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("unit_purchase_price");

                    b.Property<decimal>("UnitSalePrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("unit_sale_price");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("GMS.Models.IssueLocker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<int>("LockerId")
                        .HasColumnType("int")
                        .HasColumnName("locker_id");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.Property<DateTime?>("ModifyAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modify_at");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int")
                        .HasColumnName("modify_by");

                    b.HasKey("Id");

                    b.HasIndex("LockerId");

                    b.HasIndex("MemberId");

                    b.ToTable("IssueLockers");
                });

            modelBuilder.Entity("GMS.Models.Locker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifyAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modify_at");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int")
                        .HasColumnName("modify_by");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("number");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("Lockers");
                });

            modelBuilder.Entity("GMS.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<string>("Cnic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cnic");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contact_no");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("FatherHusbandName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("father_husband_name");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit")
                        .HasColumnName("gender");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("height");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("MemberNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("member_no");

                    b.Property<DateTime?>("ModifyAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modify_at");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int")
                        .HasColumnName("modify_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<DateTime>("RegisterAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("register_at");

                    b.Property<string>("VehicleNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vehicle_number");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("weight");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("GMS.Models.MembersSubscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<int>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("end_date");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<int>("MemberId")
                        .HasColumnType("int")
                        .HasColumnName("member_id");

                    b.Property<DateTime?>("ModifyAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modify_at");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int")
                        .HasColumnName("modify_by");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_date");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int>("SubscriptionPlanId")
                        .HasColumnType("int")
                        .HasColumnName("subscription_plan_id");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("SubscriptionPlanId");

                    b.ToTable("MembersSubscriptions");
                });

            modelBuilder.Entity("GMS.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("content");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("GMS.Models.NotificationsRead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("NotificationId")
                        .HasColumnType("int")
                        .HasColumnName("notification_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("NotificationId");

                    b.HasIndex("UserId");

                    b.ToTable("NotificationsReads");
                });

            modelBuilder.Entity("GMS.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("discount");

                    b.Property<int?>("DiscountType")
                        .HasColumnType("int")
                        .HasColumnName("discount_type");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<int>("MembersSubscriptionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modify_at");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int")
                        .HasColumnName("modify_by");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int")
                        .HasColumnName("payment_type");

                    b.Property<decimal?>("PercentageValue")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("percentage_values");

                    b.Property<int>("SubscriptionId")
                        .HasColumnType("int")
                        .HasColumnName("subscription_id");

                    b.HasKey("Id");

                    b.HasIndex("MembersSubscriptionId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("GMS.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifyAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modify_at");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int")
                        .HasColumnName("modify_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 7, 15, 15, 28, 21, 618, DateTimeKind.Local).AddTicks(4925),
                            CreatedBy = 1,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Super Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 7, 15, 15, 28, 21, 618, DateTimeKind.Local).AddTicks(4939),
                            CreatedBy = 1,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("GMS.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifyAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modify_at");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int")
                        .HasColumnName("modify_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int>("StockSubCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("stock_sub_category_id");

                    b.Property<int>("ThresholdValue")
                        .HasColumnType("int")
                        .HasColumnName("threshold_value");

                    b.Property<decimal>("UnitPurchasePrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("unit_purchase_price");

                    b.Property<decimal>("UnitSalePrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("unit_sale_price");

                    b.HasKey("Id");

                    b.HasIndex("StockSubCategoryId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("GMS.Models.StockCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifyAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modify_at");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int")
                        .HasColumnName("modify_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("StockCategories");
                });

            modelBuilder.Entity("GMS.Models.StockSubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifyAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modify_at");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int")
                        .HasColumnName("modify_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int>("StockCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("stock_category_id");

                    b.HasKey("Id");

                    b.HasIndex("StockCategoryId");

                    b.ToTable("StockSubCategories");
                });

            modelBuilder.Entity("GMS.Models.SubscriptionPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifyAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modify_at");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int")
                        .HasColumnName("modify_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("SubscriptionPlans");
                });

            modelBuilder.Entity("GMS.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("first_name");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit")
                        .HasColumnName("gender");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_name");

                    b.Property<DateTime?>("ModifyAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modify_at");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int")
                        .HasColumnName("modify_by");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("token");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GMS.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifyAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modify_at");

                    b.Property<int?>("ModifyBy")
                        .HasColumnType("int")
                        .HasColumnName("modify_by");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("GMS.Models.Invoice", b =>
                {
                    b.HasOne("GMS.Models.Member", "Member")
                        .WithMany("Invoices")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("GMS.Models.IssueLocker", b =>
                {
                    b.HasOne("GMS.Models.Locker", "Locker")
                        .WithMany("IssueLockers")
                        .HasForeignKey("LockerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GMS.Models.Member", "Member")
                        .WithMany("IssueLockers")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locker");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("GMS.Models.MembersSubscription", b =>
                {
                    b.HasOne("GMS.Models.Member", "Member")
                        .WithMany("MembersSubscriptions")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GMS.Models.SubscriptionPlan", "SubscriptionPlan")
                        .WithMany("MembersSubscription")
                        .HasForeignKey("SubscriptionPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("SubscriptionPlan");
                });

            modelBuilder.Entity("GMS.Models.NotificationsRead", b =>
                {
                    b.HasOne("GMS.Models.Notification", "Notification")
                        .WithMany("NotificationsReads")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GMS.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Notification");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GMS.Models.Payment", b =>
                {
                    b.HasOne("GMS.Models.MembersSubscription", "MembersSubscription")
                        .WithMany("Payments")
                        .HasForeignKey("MembersSubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MembersSubscription");
                });

            modelBuilder.Entity("GMS.Models.Stock", b =>
                {
                    b.HasOne("GMS.Models.StockSubCategory", "StockSubCategory")
                        .WithMany("Stocks")
                        .HasForeignKey("StockSubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StockSubCategory");
                });

            modelBuilder.Entity("GMS.Models.StockSubCategory", b =>
                {
                    b.HasOne("GMS.Models.StockCategory", "StockCategory")
                        .WithMany("StockSubCategories")
                        .HasForeignKey("StockCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StockCategory");
                });

            modelBuilder.Entity("GMS.Models.UserRole", b =>
                {
                    b.HasOne("GMS.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GMS.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GMS.Models.Locker", b =>
                {
                    b.Navigation("IssueLockers");
                });

            modelBuilder.Entity("GMS.Models.Member", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("IssueLockers");

                    b.Navigation("MembersSubscriptions");
                });

            modelBuilder.Entity("GMS.Models.MembersSubscription", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("GMS.Models.Notification", b =>
                {
                    b.Navigation("NotificationsReads");
                });

            modelBuilder.Entity("GMS.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("GMS.Models.StockCategory", b =>
                {
                    b.Navigation("StockSubCategories");
                });

            modelBuilder.Entity("GMS.Models.StockSubCategory", b =>
                {
                    b.Navigation("Stocks");
                });

            modelBuilder.Entity("GMS.Models.SubscriptionPlan", b =>
                {
                    b.Navigation("MembersSubscription");
                });

            modelBuilder.Entity("GMS.Models.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
